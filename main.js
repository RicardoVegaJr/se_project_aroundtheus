!function(){"use strict";class e{constructor(e,t,o){let{name:s,link:n}=e;this._name=s,this._link=n,this._cardSelector=t,this._handleImageClick=o}_setEventListeners(){this._cardElement.querySelector(".card-heart").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card-image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove()}_handleLikeIcon(){this._cardElement.querySelector(".card-heart").classList.toggle("card-heart_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card-image"),this._cardTitleEl=this._cardElement.querySelector(".card-title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=`Photo of ${this._name}`,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_foundInvalid(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){this._foundInvalid()?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this._setEventListeners(this._formEl)}};class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeModalButton=this._popupElement.querySelector(".modal__close")}openModal(){this._popupElement.classList.add("modal_opened"),this.setEventListeners()}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscButton),document.removeEventListener("click",this._handleOverlayClose),this._closeModalButton.removeEventListener("click",this._handleClickButtonClose)}_handleEscButton=e=>{"Escape"===e.key&&(console.log("esc pressed"),this.closeModal())};_handleOverlayClose=e=>{e.target.classList.contains("modal_opened")&&this.closeModal()};_handleClickButtonClose=()=>{this.closeModal()};setEventListeners(){document.addEventListener("keyup",this._handleEscButton),document.addEventListener("click",this._handleOverlayClose),this._closeModalButton.addEventListener("click",this._handleClickButtonClose)}}class s extends o{constructor(e){let{popupSelector:t,handleFormSubmit:o}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=o}closeModal(){this._popupForm.reset(),super.closeModal(),this._popupForm.removeEventListener("submit",this._handleFormSubmitButton)}_handleFormSubmitButton=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())};setEventListeners(){this._popupForm.addEventListener("submit",this._handleFormSubmitButton),super.setEventListeners()}_getInputValues(){const e=[...this._popupForm.querySelectorAll(".input")],t={};for(const o of e)t[o.name]=o.value;return t}}const n=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],r=document.querySelector("#profileModal"),l=(document.querySelector("#modalProfileClose"),document.querySelector("#contentModal"),document.querySelector("#content__add-button-action")),i=(document.querySelector("#modalContentClose"),document.querySelector("#modalprofileform")),a=document.querySelector("#modalcontentform"),c=i.querySelector("#name"),u=i.querySelector("#title"),d=(document.querySelector("#profilename"),document.querySelector("#profilejob"),document.querySelector("#modalsubmit"),document.querySelector(".cards"),document.querySelector("#card-template").content.firstElementChild,a.querySelector(".modal__edit_title"),a.querySelector(".modal__edit_url"),document.querySelector("#modalPreviewClose"),new s({popupSelector:"#contentModal",handleFormSubmit:function(e){E({name:e.title,link:e.url}),d.closeModal()}})),m=new s({popupSelector:"#profileModal",handleFormSubmit:function(e){p.setUserInfo(e),m.closeModal()}}),h=new class extends o{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._imagePreview=document.querySelector(".modal__preview-image"),this._modalImageText=document.querySelector(".modal__preview-title")}openModal(e){let{name:t,link:o}=e;this._imagePreview.src=o,this._imagePreview.alt=`Photo of ${t}`,this._modalImageText.textContent=t,super.openModal()}closeModal(){super.closeModal()}}({popupSelector:".js-preview-popup"}),_=new class{constructor(e,t,o){let{items:s}=e;this._items=s,this._renderer=t,this._container=document.querySelector(o)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:n},E,"#section");_.renderItems(n);const p=new class{constructor(e,t){this.nameEl=document.querySelector(e),this.aboutEl=document.querySelector(t)}getUserInfo(){return{name:this.nameEl.textContent,job:this.aboutEl.textContent}}setUserInfo(e){this.nameEl.textContent=e.name,this.aboutEl.textContent=e.about}}("#profilename","#profilejob");function E(t){const o=new e(t,"#card-template",S);_.addItem(o.getView())}function S(e){console.log(e),h.openModal(e)}document.querySelector("#profile__edit-button-action").addEventListener("click",(()=>{const e=p.getUserInfo();c.value=e.name,u.value=e.job,y.toggleButtonState(),m.openModal()})),l.addEventListener("click",(()=>{y.toggleButtonState(),d.openModal()}));const v={formSelector:".modal__form",inputSelector:".modal__edit",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__error",errorClass:".modal__error_visible"};new t(v,r).enableValidation();const y=new t(v,a);y.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,