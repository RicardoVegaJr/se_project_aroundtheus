!function(){"use strict";class e{constructor(e,t,o,s,n,r){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=o,this._handleCardDeleteClick=s,this._handleCardLike=n,this._handleCardLikeRemove=r}getId(){return this._id}_setEventListeners(){this._cardElement.querySelector(".card-heart").addEventListener("click",(()=>{this._isLiked?this._handleCardLikeRemove(this):this._handleCardLike(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleCardDeleteClick(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}remove(){this._cardElement.remove()}handleLikeIcon(){this._cardElement.querySelector(".card-heart").classList.toggle("card-heart_active"),this._isLiked=!this._isLiked}_loadLikes(){this._cardElement.querySelector(".card-heart").classList.add("card-heart_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card-image"),this._cardTitleEl=this._cardElement.querySelector(".card-title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=`Photo of ${this._name}`,this._cardTitleEl.textContent=this._name,this._isLiked&&this._loadLikes(),this._setEventListeners(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_foundInvalid(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){this._foundInvalid()?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._formEl)}};class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeModalButton=this._popupElement.querySelector(".modal__close")}openModal(){this._popupElement.classList.add("modal_opened"),this.setEventListeners()}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscButton),document.removeEventListener("click",this._handleOverlayClose),this._closeModalButton.removeEventListener("click",this._handleClickButtonClose)}_handleEscButton=e=>{"Escape"===e.key&&this.closeModal()};_handleOverlayClose=e=>{e.target.classList.contains("modal_opened")&&this.closeModal()};_handleClickButtonClose=()=>{this.closeModal()};setEventListeners(){document.addEventListener("keyup",this._handleEscButton),document.addEventListener("click",this._handleOverlayClose),this._closeModalButton.addEventListener("click",this._handleClickButtonClose)}}class s extends o{constructor(e){let{popupSelector:t,handleFormSubmit:o}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=o}closeModal(){this._popupForm.reset(),super.closeModal(),this._popupForm.removeEventListener("submit",this._handleFormSubmitButton)}_handleFormSubmitButton=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())};setEventListeners(){this._popupForm.addEventListener("submit",this._handleFormSubmitButton),super.setEventListeners()}_getInputValues(){const e=[...this._popupForm.querySelectorAll(".input")],t={};for(const o of e)t[o.name]=o.value;return t}setSubmitAction(e){this._handleFormSubmit=e}}class n{constructor(e,t,o){let{items:s}=e;this._items=s,this._renderer=t,this._container=document.querySelector(o)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.appendChild(e)}prependItems(e){this._container.prepend(e)}}const r={formSelector:".modal__form",inputSelector:".modal__edit",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__error",errorClass:".modal__error_visible"},i=document.querySelector("#profileModal"),l=document.querySelector("#profilePhotoModal"),a=document.querySelector("#profileImage"),c=document.querySelector("#content__add-button-action"),d=document.querySelector("#modalprofileform"),h=document.querySelector("#modalcontentform"),u=d.querySelector("#name"),m=d.querySelector("#title"),_=document.querySelector("#profile__edit-button-action"),p=new class{constructor(e){let{baseUrl:t,headers:o}=e;this._baseUrl=t,this._headers=o}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}editProfileInfo(e){let{name:t,about:o}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:o})}).then((e=>this._checkResponse(e)))}addNewCard(e){let{title:t,url:o}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:o})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}addCardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeCardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}updateProfilePhoto(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.profilePictureLink})}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"23172f33-55e2-4e0e-a695-0bae3ab40106","Content-Type":"application/json"}});function E(t){return new e(t,"#card-template",y,L,I,B).getView()}let S;p.getInitialCards().then((e=>{S=new n({items:e},(function(e){const t=E(e);S.addItem(t)}),"#section"),S.renderItems()})).catch((e=>{console.log(e)}));const v=new s({popupSelector:"#contentModal",handleFormSubmit:function(e){const t=document.getElementById("modalContentSubmit"),o=t.textContent;t.textContent="Saving...",p.addNewCard(e).then((e=>{const t=E(e);S.prependItems(t),v.closeModal()})).catch((e=>{console.log(e)})).finally((()=>{t.textContent=o}))}});c.addEventListener("click",(()=>{M.toggleButtonState(),v.openModal()}));const f=new class{constructor(e,t,o){this.nameEl=document.querySelector(e),this.aboutEl=document.querySelector(t),this.userAvatar=document.querySelector(o)}getUserInfo(){return{name:this.nameEl.textContent,job:this.aboutEl.textContent}}setUserInfo(e){let{name:t,about:o,avatar:s}=e;this.nameEl.textContent=t,this.aboutEl.textContent=o,this.userAvatar.src=s}}("#profilename","#profilejob","#profileImage");p.loadUserInfo().then((e=>{f.setUserInfo(e)})).catch(console.error),_.addEventListener("click",(()=>{const e=f.getUserInfo();u.value=e.name,m.value=e.job,b.openModal()})),a.addEventListener("click",(()=>{w.toggleButtonState(),C.openModal()}));const b=new s({popupSelector:"#profileModal",handleFormSubmit:function(e){q.toggleButtonState(),b.openModal();const t=e.name,o=e.about,s=document.getElementById("modalProfileSubmit"),n=s.textContent;s.textContent="Saving...",p.editProfileInfo({name:t,about:o}).then((e=>{f.setUserInfo(e),b.closeModal()})).catch((e=>{console.log(e)})).finally((()=>{s.textContent=n}))}}),C=new s({popupSelector:"#profilePhotoModal",handleFormSubmit:function(e){const t=document.getElementById("modalPhotoSubmit"),o=t.textContent;t.textContent="Saving...",p.updateProfilePhoto(e).then((e=>{f.setUserInfo(e),C.closeModal()})).catch((e=>{console.log(e)})).finally((()=>{t.textContent=o}))}}),k=new s({popupSelector:"#deleteContent"}),g=new class extends o{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._imagePreview=document.querySelector(".modal__preview-image"),this._modalImageText=document.querySelector(".modal__preview-title")}openModal(e){this._imagePreview.src=e.link,this._imagePreview.alt=`Photo of ${e.name}`,this._modalImageText.textContent=e.name,super.openModal()}}({popupSelector:"#jsPopupSelector"});function L(e){k.openModal(),k.setSubmitAction((()=>{p.deleteCard(e.getId()).then((()=>{e.remove(),k.closeModal()})).catch((e=>{console.log(e)}))}))}function y(e){g.openModal(e)}function I(e){p.addCardLike(e.getId()).then((()=>{e.handleLikeIcon()})).catch((e=>{console.log(e)}))}function B(e){p.removeCardLike(e.getId()).then((()=>{e.handleLikeIcon()})).catch((e=>{console.log(e)}))}const q=new t(r,i);q.enableValidation();const M=new t(r,h);M.enableValidation();const w=new t(r,l);w.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,